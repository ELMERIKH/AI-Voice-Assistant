import tkinter as tkfrom tkinter import ttkfrom tkinter import messageboximport osimport cv2from PIL import Image, ImageTkfrom main import runchatbot,generate_responseimport threadingimport sysimport speech_recognition as srimport timeimport pyttsx3class ChatbotGUI:    def __init__(self, root):        self.root = root        self.response_box = tk.Text(self.root, height=5, width=50,bg="black", fg="#4ee44e")        self.response_box.pack()        bottom_frame = tk.Frame(self.root, bg="black")        bottom_frame.pack(fill=tk.BOTH, expand=True)        self.run_button =tk.Button(self.root, text="RUN", command=self.start_chatbot_thread,bg="#179b17")        self.run_button.pack(side=tk.BOTTOM)        self.engine = pyttsx3.init()        self.engine.connect('started-utterance', self.on_speak)        self.engine.connect('finished-utterance', self.on_speak_finish)    def start_chatbot_thread(self):        chatbot_thread = threading.Thread(target=runchatbot, args=(self.handle_response,))        chatbot_thread.start()    def handle_response(self, response):        # Clear the response box        self.response_box.delete('1.0', tk.END)        for letter in response:            self.response_box.insert(tk.END, letter)            self.response_box.see(tk.END)            self.root.update_idletasks()            time.sleep(0.05)        self.response_box.insert(tk.END, "\n")    def speak(self, text):        self.engine.say(text)        self.engine.runAndWait()    def on_speak(self, name, location, length):         self.response_box.configure(state='disabled')    def on_speak_finish(self, name, completed):        self.response_box.configure(state='normal')class VideoPlayer:    def __init__(self, parent, video_source):        self.parent = parent        self.video_source = video_source        self.cap = cv2.VideoCapture(self.video_source)        self.width = self.cap.get(cv2.CAP_PROP_FRAME_WIDTH)        self.height = self.cap.get(cv2.CAP_PROP_FRAME_HEIGHT)        self.canvas = tk.Canvas(self.parent, width=self.width, height=self.height, highlightbackground="black",bg='black')        self.canvas.pack()        self.delay = 80        self.update()        # Set up sound        self.sound_file = "/misc.mp3"    def update(self):        ret, frame = self.cap.read()        if not ret:            # restart the video from the beginning            self.cap.set(cv2.CAP_PROP_POS_FRAMES, 0)            ret, frame = self.cap.read()        if ret:            img = Image.fromarray(frame)            img_tk = ImageTk.PhotoImage(image=img)            self.canvas.img_tk = img_tk            self.canvas.create_image(0, 0, anchor=tk.NW, image=img_tk)        self.parent.after(self.delay, self.update)    def play_sound(self):        # Load sound file        pygame.mixer.init()        pygame.mixer.music.load(self.sound_file)        # Play sound in loop        pygame.mixer.music.play(-1)    def submit_text(self):        # Get text from widget3        text = self.widget3.get()        # Show message box with text        messagebox.showinfo("Input Text", f"You entered: {text}")def main():    root = tk.Tk()    root.title("Beryl")    root.configure(bg="black")    gui = ChatbotGUI(root)    root.iconbitmap("C:/Users/monce/PycharmProjects/pythonProject/Beryl.ico")    video_player = VideoPlayer(root, "C:/Users/monce/PycharmProjects/pythonProject/bb.gif")    root.mainloop()if __name__ == '__main__':    main()